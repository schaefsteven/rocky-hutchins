// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here
$body-bg-dark: black;
$body-color-dark: #FFF;

$primary: #00C15B;
$secondary: orange;

$code-color: #48E91D;

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";

// 4. Include any default map overrides here

// 5. Include remainder of required parts
@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/root";

// 6. Optionally include any other parts as needed
@import "../node_modules/bootstrap/scss/utilities";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/helpers";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/nav";

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
$utilities: map-merge(
  $utilities,
  (
    "font-size": map-merge(
      map-get($utilities, "font-size"),
    (responsive: true),
    ),
  )
);

@import "../node_modules/bootstrap/scss/utilities/api";
@import "../node_modules/bootstrap/scss/bootstrap";
$bootstrap-icons-font-src: url('/node_modules/bootstrap-icons/font/fonts/bootstrap-icons.woff2') format("woff2"), url('/node_modules/bootstrap-icons/font/fonts/bootstrap-icons.woff') format('woff');
@import "../node_modules/bootstrap-icons/font/bootstrap-icons.scss";

// 8. Add additional custom code here

@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;600&display=swap');

.overlay {
    position: relative;
    width: 100%;
    > * {
        z-index: 10;
        position: relative;
    }
    > .behind-overlay {
        z-index: 1;
        position: absolute;
    }
}

.home-hero .overlay {
    $height: 70svh;
    min-height: $height;
    > .behind-overlay {
        top: 0px;
        right: 0px;
        height: $height;
        margin-left: 20%;
        @media screen and (max-width: 560px) {
            right: -10%;
        }
    }
}

.home-hero .overlay {
    > *:not(.behind-overlay) {
    }
    p, li {
        background-color: rgba(0,0,0,0.5);
        border-radius: 1rem;
        font-family: 'Roboto Mono', monospace;
    }
    h1 {
        @extend .display-3;
        max-width: 75%;
    }
    p {
        font-weight: 300;
        max-width: Min(60%, 400px);
        letter-spacing: -1.5px;
    }
    ul {
        padding: 0;
        text-transform: lowercase;
    }
    li {
        @extend .mt-4;
        list-style: none;
        width: max-content;
        padding-right: 1rem;
        ::after {
            content: " >";
        }
    }
    a {
        color: inherit;
        text-decoration: none;
        @extend .fs-3;
    }
}

.navbar-brand img {
    max-height: 50px;
    width: auto;
}

.album-wrapper {
    @media screen and (min-width: 768px) {
        aspect-ratio: 21/10;
    }
    //overflow: clip;
}

.album-wrapper > div {
    max-width: 480px;
    height: 100%;
}

.album-art {
    max-width: 100%;
    border: 2px solid #1B1B1B;
}

.album-desc {
    height: 100%;
}

.bc-player {
    overflow: clip;
    height: 300px;
    max-height: 100%;
    border: 2px solid black;
    width: 100%;
}

.red-border {
    border: 1px solid red;
}

// start template styles ++++++++++++++++++++++++++++++++++++++++++++++++++++++

.prim-sec {
    @extend .py-md-5;
    @extend .py-2;
}

.prim-cont {
    @extend .container-xxl;
    @extend .d-md-flex;
    max-width: 900px;
}

main > section:nth-child(even) {
    @extend .bg-dark-subtle;
}

.show .navbar-nav > li {
    border-bottom: 1px solid $gray-900;
}

.text-emphasis-1 {
    @extend .text-primary;
    font-weight: bold;
}

// start global styles ++++++++++++

html, body {
    max-width: 100%;
    overflow-x: hidden;
}

body {
    min-height: 100svh;
    display: flex;
    flex-direction: column;
}

footer {
    margin-top: auto;
    background-color: black;
}

// end global styles ---------------

// start markdown styles ++++++++++++++++++

article.markdown {
    @extend .bg-dark-subtle;
    @extend .p-4;
    @extend .fs-5;
    max-width: Min(100%, 1000px);
    line-height: 2.2rem;
}

article.markdown img {
    max-height: 800px;
    max-width: Min(1200px, 100%);
    width: auto;
}

.markdown-img-wrapper {
    max-width: Min(1200px, 100%);
    width: fit-content;
    border-radius: 1rem;
    background-color: rgba(0, 0, 0, 0.2);
    @extend .me-md-4;
    @extend .mb-4;
    @extend .d-flex;
    @extend .flex-column;
    @extend .align-items-center;
    @extend .text-body-secondary;
    @extend .fs-6;
}

article.markdown p {
    @extend .text-body-secondary;
}

// inline `code` snippets
p > code {
    background-color: black;
    padding: 0.3rem;
    border-radius: 0.4rem;
}

// ```code``` blocks
pre {
    padding: 0.5rem;
    padding-left: 1rem;
    border-radius: 1rem;
}

// end markdown styles -------------

// end template styles --------------------------------------------------------

